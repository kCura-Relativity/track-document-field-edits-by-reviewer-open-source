<script>
	<name>Track Documents Field Edits by Reviewer - Event Handler Maintenance</name>
	<description>This is an Event Handler maintenance script that is used to remove unused Event Handlers associated to the Track Document Edits by Reviewer application. - KCD_1038837</description>
	<version>5.5</version>
	<category>Admin Functionality</category>
	<input/>
	<action returns="table" timeout="1200"><![CDATA[
	
	/*
	Created By: EVN
	Created On: 10/11/2013
	Description: Initial build.
	*/

	------------------------
	-- Variable Declaration
	------------------------
	DECLARE @eventHandlerName VARCHAR(500) 
	SET @eventHandlerName = 'kCura.UnitedLex._00099017.PopulateModificationField.PopulateModificationDateAndUser'
	DECLARE @assemblyName VARCHAR(200) SET @assemblyName = 'kCura.UnitedLex.00099017.PopulateModificationField.dll'
	DECLARE @duplicateAssemblyName VARCHAR(200) SET @duplicateAssemblyName = 'KCD_1038837.PopulateModificationField.PopulateModificationDateAndUser'
	DECLARE @assemblyArtifactID BIGINT 

	-----------------------------------------------------------------------------------
	--Loop through each workspace and determine if Event Handler exists and delete it
	-----------------------------------------------------------------------------------
	CREATE TABLE #Workspaces(ID INT IDENTITY, CaseArtifactID BIGINT, WorkspacePath VARCHAR(200))
	INSERT INTO #Workspaces
	SELECT 
		C.ArtifactID,
		'[' + RS.[Name] + '].[EDDS' + CONVERT(VARCHAR(20), C.ArtifactID) + ']' [WorkspacePath]
	FROM 
		[EDDS].[EDDSDBO].[Case] C WITH(NOLOCK)
		INNER JOIN [EDDS].[EDDSDBO].[ResourceServer] RS WITH(NOLOCK) ON C.ServerID = RS.ArtifactID

	DECLARE @currID INT, @maxID INT
	DECLARE @caseArtifactID BIGINT, @workspacePath VARCHAR(200)
	DECLARE @batchSize INT SET @batchSize = 1
	DECLARE @SQL VARCHAR(MAX), @SQLDuplicate VARCHAR(MAX) 

	SELECT @currID = MIN([ID]), @maxID = MAX([ID]) FROM #Workspaces
	WHILE @currID <= @maxID 
		BEGIN
			BEGIN TRY 
			
			
			SELECT 
				@caseArtifactID = CaseArtifactID, 
				@workspacePath = WorkspacePath
			FROM #Workspaces 
			WHERE ID = @currID

			SET @SQL = '
			DECLARE @eventHandlerArtifactID BIGINT 
			DECLARE @eventHandlerArtifactGUID VARCHAR(500)

			SELECT @eventHandlerArtifactID = ArtifactID
			FROM ' + @workspacePath + '.[EDDSDBO].[Artifact] WITH(NOLOCK)
			WHERE TextIdentifier = ''' + @eventHandlerName + '''

			SELECT @eventHandlerArtifactGUID = ArtifactGUID
			FROM ' + @workspacePath + '.[EDDSDBO].[ArtifactGUID] WITH(NOLOCK)
			WHERE ArtifactID = @eventHandlerArtifactID 

			DELETE FROM ' + @workspacePath + '.[EDDSDBO].[ApplicationEventHandler] 
			WHERE EventHandlerArtifactID =  @eventHandlerArtifactID

			DELETE FROM ' + @workspacePath + '.[EDDSDBO].[ArtifactAncestry] 
			WHERE ArtifactID = @eventHandlerArtifactID

			DELETE FROM ' + @workspacePath + '.[EDDSDBO].[ActiveSyncs] 
			WHERE ArtifactID = @eventHandlerArtifactID

			DELETE FROM ' + @workspacePath + '.[EDDSDBO].[ApplicationGUID] 
			WHERE ArtifactGUID = @eventHandlerArtifactGUID

			DELETE FROM ' + @workspacePath + '.[EDDSDBO].[ArtifactGUID] 
			WHERE ArtifactID = @eventHandlerArtifactID

			DELETE FROM ' + @workspacePath + '.[EDDSDBO].[Artifact] 
			WHERE ArtifactID = @eventHandlerArtifactID'
			
			EXEC(@SQL)

			---------------------------------------------------------
			--Remove the duplicate Event Handler from each workspace
			---------------------------------------------------------
			SET @SQLDuplicate = '

			DECLARE @duplicateAssemblyArtifactID BIGINT
			SELECT @duplicateAssemblyArtifactID = AssemblyArtifactID 
			FROM [EDDS].[EDDSDBO].[AssemblyEventHandler] WITH(NOLOCK)
			WHERE [Name] = ''' + @duplicateAssemblyName + '''

			IF (SELECT COUNT(ArtifactID) FROM ' + @workspacePath + '.[EDDSDBO].[ActiveSyncs] WITH(NOLOCK) WHERE AssemblyArtifactID = @duplicateAssemblyArtifactID) > 1
				BEGIN
					DECLARE @activeSyncID BIGINT
					SELECT TOP 1 @activeSyncID = ArtifactID
					FROM ' + @workspacePath + '.[EDDSDBO].[ActiveSyncs] WITH(NOLOCK) 
					WHERE 
						AssemblyArtifactID = @duplicateAssemblyArtifactID
					ORDER BY
						ArtifactID DESC

					------------------------
					--Delete from Workspace
					------------------------
					DECLARE @artifactGUID VARCHAR(200)
					SELECT @artifactGUID = ArtifactGuid FROM ' + @workspacePath + '.[EDDSDBO].[ArtifactGuid] WHERE ArtifactID = @activeSyncID

					DELETE FROM ' + @workspacePath + '.[EDDSDBO].[ApplicationEventHandler] WHERE EventHandlerArtifactID = @activeSyncID
					DELETE FROM ' + @workspacePath + '.[EDDSDBO].[ArtifactAncestry] WHERE ArtifactID = @activeSyncID 
					DELETE FROM ' + @workspacePath + '.[EDDSDBO].[ActiveSyncs] WHERE ArtifactID = @activeSyncID
					DELETE FROM ' + @workspacePath + '.[EDDSDBO].[ApplicationGuid] WHERE ArtifactGuid = @artifactGUID
					DELETE FROM ' + @workspacePath + '.[EDDSDBO].[ArtifactGuid] WHERE ArtifactID = @activeSyncID
					DELETE FROM ' + @workspacePath + '.[EDDSDBO].[Artifact] WHERE ArtifactID = @activeSyncID

					----------------------
					--Delete from EDDS
					----------------------
					DELETE FROM [EDDS].[EDDSDBO].[AssemblyCaseActiveSync]
					WHERE
						AssemblyArtifactID = @duplicateAssemblyArtifactID
						AND ActiveSyncID = @activeSyncID
				END'

			EXEC(@SQLDuplicate)
			
			
			END TRY
			
			BEGIN CATCH
					DECLARE @result VARCHAR(200) SET @result = 'Error encountered while performing maintenance on workspace ' + CONVERT(VARCHAR(20), @caseArtifactID) 
					SELECT @result [ERROR]
			END CATCH
			
			SET @currID = @currID + @batchSize
		END

	-----------------------------------------------------------------------------------
	--EDDS
	--Go through EDDS and remove link to each workspace that has this Event Handler
	-----------------------------------------------------------------------------------
	IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'Assembly')
		BEGIN
			SELECT @assemblyArtifactID = ArtifactID
			FROM [EDDS].[EDDSDBO].[Assembly] WITH(NOLOCK)
			WHERE [Name] = @assemblyName
		END
	ELSE
		BEGIN
			SELECT @assemblyArtifactID = ArtifactID
			FROM [EDDS].[EDDSDBO].[ResourceFile] WITH(NOLOCK)
			WHERE [Name] = @assemblyName
		END


	--------------------------------------------------------------
	--Remove the Assembly Case Active Sync from the Library
	----------------------------------------------------------------
	DELETE FROM [EDDS].[EDDSDBO].[AssemblyCaseActiveSync]
	WHERE AssemblyArtifactID = @assemblyArtifactID

	----------------------------------------------------------------
	--Remove the Assembly Event Handler
	----------------------------------------------------------------
	DELETE FROM [EDDS].[EDDSDBO].[AssemblyEventHandler]
	WHERE AssemblyArtifactID = @assemblyArtifactID

	----------------------------------------------------------------
	--Remove the Assembly from the Library
	----------------------------------------------------------------
	IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'Assembly')
		BEGIN
			DELETE FROM [EDDS].[EDDSDBO].[Assembly]
			WHERE ArtifactID = @assemblyArtifactID
		END
	ELSE
		BEGIN
			DELETE FROM [EDDS].[EDDSDBO].[ResourceFile]
			WHERE ArtifactID = @assemblyArtifactID
		END
	
	----------------------------------------------------------------
	--Clean Up
	----------------------------------------------------------------
	IF OBJECT_ID('tempdb..#Workspaces') IS NOT NULL DROP TABLE #Workspaces
		
	SELECT 'Process Complete' [Results]
	]]></action>
</script>